<?xml version="1.0" encoding="UTF-8"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.ford.aem</groupId>
  <artifactId>ford-aem-parent</artifactId>
  <version>1.3.3</version>
  <packaging>pom</packaging>
  <description>Ford AEM</description>
   <scm>
	<connection>scm:git:git@github.ford.com:AEMEU-CICD/ford-aem-parent.git</connection>
	<developerConnection>scm:git:git@github.ford.com:AEMEU-CICD/ford-aem-parent.git</developerConnection>
	<url>https://github.ford.com/AEMEU-CICD/ford-aem-parent</url>
  </scm>
  <distributionManagement>
    <repository>
      <id>central</id>
      <url>https://jfrog.ford.com/artifactory/imgecom-maven-prod-local</url>
    </repository>
    <snapshotRepository>
      <id>snapshots</id>
      <url>https://jfrog.ford.com/artifactory/imgecom-maven-dev-local</url>
    </snapshotRepository>
  </distributionManagement>
  <properties>
    <aem.publish.port>4503</aem.publish.port>
    <frontend.test.script>test:full</frontend.test.script>
    <aem.password>admin</aem.password>
    <frontend.install.registry.phantom>https://jfrog.ford.com/artifactory/ford-aem-phantom</frontend.install.registry.phantom>
    <aet.timeout>600000</aet.timeout>
    <aet.domain>http://host.docker.internal:4503</aet.domain>
    <aem.host>localhost</aem.host>
    <frontend.install.dist>https://jfrog.ford.com/artifactory/node-js</frontend.install.dist>
    <skipNpm>false</skipNpm>
    <bobcat.configuration.paths>${project.build.directory}/config</bobcat.configuration.paths>
    <surefire.java.fork.count>1</surefire.java.fork.count>
    <aet.suitcase.files>smoke.xml</aet.suitcase.files>
    <frontend.install.cmd>install</frontend.install.cmd>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <frontend.install.registry>https://jfrog.ford.com/artifactory/api/npm/npmjs/</frontend.install.registry>
    <bobcat.properties.file>src/main/config/environment.properties</bobcat.properties.file>
    <surefire.java.fork.reuse>true</surefire.java.fork.reuse>
    <skipTests>false</skipTests>
    <adfs.token.value>1</adfs.token.value>
    <bobcat.webdriver.url>http://localhost:4444/wd/hub</bobcat.webdriver.url>
    <aem.port>4502</aem.port>
    <bobcat.cucumber.glue>${bobcat.cucumber.package}</bobcat.cucumber.glue>
    <aet.suitcase.name>dev</aet.suitcase.name>
    <aet.xUnit>false</aet.xUnit>
    <formatter.validate.only>true</formatter.validate.only>
    <bobcat.cucumber.tag>@dev</bobcat.cucumber.tag>
    <frontend.build.script>build:prod:withTest</frontend.build.script>
    <formatter.phase>none</formatter.phase>
    <bobcat.fork.count>1</bobcat.fork.count>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <bndReleaseVersions>true</bndReleaseVersions>
    <bobcat.cucumber.reportPath>${project.build.directory}/cucumber-reports</bobcat.cucumber.reportPath>
    <revision>1.3.2-SNAPSHOT</revision>
    <aem.publish.host>localhost</aem.publish.host>
    <bobcat.browser.context>chrome</bobcat.browser.context>
    <aet.endpointDomain>http://localhost:4445</aet.endpointDomain>
    <aem.user>admin</aem.user>
    <bobcat.domain>http://host.docker.internal:4503</bobcat.domain>
    <skipBndBaseline>true</skipBndBaseline>
  </properties>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>biz.aQute.bnd</groupId>
        <artifactId>biz.aQute.bndlib</artifactId>
        <version>3.1.0</version>
      </dependency>
      <dependency>
        <groupId>org.osgi</groupId>
        <artifactId>osgi.core</artifactId>
        <version>6.0.0</version>
      </dependency>
      <dependency>
        <groupId>org.osgi</groupId>
        <artifactId>osgi.cmpn</artifactId>
        <version>6.0.0</version>
      </dependency>
      <dependency>
        <groupId>org.osgi</groupId>
        <artifactId>org.osgi.annotation.versioning</artifactId>
        <version>1.1.0</version>
      </dependency>
      <dependency>
        <groupId>org.osgi</groupId>
        <artifactId>org.osgi.annotation.bundle</artifactId>
        <version>1.0.0</version>
      </dependency>
      <dependency>
        <groupId>org.osgi</groupId>
        <artifactId>org.osgi.service.metatype.annotations</artifactId>
        <version>1.4.0</version>
      </dependency>
      <dependency>
        <groupId>org.osgi</groupId>
        <artifactId>org.osgi.service.component.annotations</artifactId>
        <version>1.4.0</version>
      </dependency>
      <dependency>
        <groupId>org.osgi</groupId>
        <artifactId>org.osgi.service.component</artifactId>
        <version>1.4.0</version>
      </dependency>
      <dependency>
        <groupId>org.osgi</groupId>
        <artifactId>org.osgi.service.cm</artifactId>
        <version>1.6.0</version>
      </dependency>
      <dependency>
        <groupId>org.osgi</groupId>
        <artifactId>org.osgi.service.event</artifactId>
        <version>1.3.1</version>
      </dependency>
      <dependency>
        <groupId>org.osgi</groupId>
        <artifactId>org.osgi.service.log</artifactId>
        <version>1.4.0</version>
      </dependency>
      <dependency>
        <groupId>org.osgi</groupId>
        <artifactId>org.osgi.resource</artifactId>
        <version>1.0.0</version>
      </dependency>
      <dependency>
        <groupId>org.osgi</groupId>
        <artifactId>org.osgi.framework</artifactId>
        <version>1.9.0</version>
      </dependency>
      <dependency>
        <groupId>org.osgi</groupId>
        <artifactId>org.osgi.util.converter</artifactId>
        <version>1.0.0</version>
      </dependency>
      <dependency>
        <groupId>org.apache.sling</groupId>
        <artifactId>org.apache.sling.api</artifactId>
        <version>2.22.0</version>
      </dependency>
      <dependency>
        <groupId>org.apache.sling</groupId>
        <artifactId>org.apache.sling.servlets.annotations</artifactId>
        <version>1.2.4</version>
      </dependency>
      <dependency>
        <groupId>org.apache.sling</groupId>
        <artifactId>org.apache.sling.query</artifactId>
        <version>3.0.0</version>
      </dependency>
      <dependency>
        <groupId>org.apache.sling</groupId>
        <artifactId>org.apache.sling.models.api</artifactId>
        <version>1.3.6</version>
      </dependency>
      <dependency>
        <groupId>org.apache.sling</groupId>
        <artifactId>org.apache.sling.scripting.sightly.compiler</artifactId>
        <version>1.0.22-1.4.0</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.sling</groupId>
        <artifactId>org.apache.sling.scripting.sightly.compiler.java</artifactId>
        <version>1.0.26-1.4.0</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.jackrabbit</groupId>
        <artifactId>oak-commons</artifactId>
        <version>1.8.3</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>1.7.21</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-simple</artifactId>
        <version>1.7.25</version>
      </dependency>
      <dependency>
        <groupId>com.adobe.aem</groupId>
        <artifactId>uber-jar</artifactId>
        <version>6.5.8</version>
      </dependency>
      <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>javax.servlet-api</artifactId>
        <version>3.1.0</version>
      </dependency>
      <dependency>
        <groupId>javax.servlet.jsp</groupId>
        <artifactId>jsp-api</artifactId>
        <version>2.1</version>
      </dependency>
      <dependency>
        <groupId>javax.annotation</groupId>
        <artifactId>javax.annotation-api</artifactId>
        <version>1.3.2</version>
      </dependency>
      <dependency>
        <groupId>org.apache.geronimo.specs</groupId>
        <artifactId>geronimo-atinject_1.0_spec</artifactId>
        <version>1.0</version>
      </dependency>
      <dependency>
        <groupId>javax.jcr</groupId>
        <artifactId>jcr</artifactId>
        <version>2.0</version>
      </dependency>
      <dependency>
        <groupId>com.day.cq.wcm</groupId>
        <artifactId>cq-wcm-taglib</artifactId>
        <version>5.7.4</version>
      </dependency>
      <dependency>
        <groupId>com.opencsv</groupId>
        <artifactId>opencsv</artifactId>
        <version>3.2</version>
      </dependency>
      <dependency>
        <groupId>org.jsoup</groupId>
        <artifactId>jsoup</artifactId>
        <version>1.14.3</version>
      </dependency>
      <dependency>
        <groupId>com.google.code.gson</groupId>
        <artifactId>gson</artifactId>
        <version>2.8.2</version>
      </dependency>
      <dependency>
        <groupId>org.assertj</groupId>
        <artifactId>assertj-core</artifactId>
        <version>2.9.1</version>
      </dependency>
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>4.11</version>
      </dependency>
      <dependency>
        <groupId>org.junit</groupId>
        <artifactId>junit-bom</artifactId>
        <version>5.4.1</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
        <version>2.25.1</version>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-junit-jupiter</artifactId>
        <version>2.25.1</version>
      </dependency>
      <dependency>
        <groupId>junit-addons</groupId>
        <artifactId>junit-addons</artifactId>
        <version>1.4</version>
      </dependency>
      <dependency>
        <groupId>io.wcm</groupId>
        <artifactId>io.wcm.testing.aem-mock.junit5</artifactId>
        <version>3.1.0</version>
      </dependency>
      <dependency>
        <groupId>uk.org.lidalia</groupId>
        <artifactId>slf4j-test</artifactId>
        <version>1.0.1</version>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>com.ford.devops</groupId>
          <artifactId>devops-maven-plugin</artifactId>
          <version>1.0.3</version>
        </plugin>
        <plugin>
          <groupId>net.revelc.code.formatter</groupId>
          <artifactId>formatter-maven-plugin</artifactId>
          <version>2.16.0</version>
          <dependencies>
            <dependency>
              <groupId>com.ford.devops</groupId>
              <artifactId>coding-guidelines</artifactId>
              <version>2</version>
            </dependency>
          </dependencies>
          <configuration>
            <configXmlFile>ford/xml_formatter.properties</configXmlFile>
            <configFile>ford/java_formatter.xml</configFile>
            <directories>
              <directory>${basedir}</directory>
            </directories>
            <excludes>
              <exclude>**/target/**</exclude>
              <exclude>**/jcr_root/**</exclude>
              <exclude>**/node/**</exclude>
              <exclude>**/node_modules/**</exclude>
              <exclude>**/.idea/**</exclude>
              <exclude>**/.flattened-pom.xml</exclude>
            </excludes>
            <includes>
              <include>**/*.xml</include>
              <include>**/*.java</include>
            </includes>
          </configuration>
        </plugin>
        <plugin>
          <groupId>com.github.eirslett</groupId>
          <artifactId>frontend-maven-plugin</artifactId>
          <version>1.7.6</version>
          <executions>
            <execution>
              <id>install-node-and-npm</id>
              <goals>
                <goal>install-node-and-npm</goal>
              </goals>
            </execution>
            <execution>
              <id>npm-ci</id>
              <goals>
                <goal>npm</goal>
              </goals>
              <configuration>
                <arguments>${frontend.install.cmd} --registry=${frontend.install.registry} --phantomjs_cdnurl=${frontend.install.registry.phantom}</arguments>
              </configuration>
            </execution>
          </executions>
          <configuration>
            <nodeVersion>v8.12.0</nodeVersion>
            <npmVersion>6.4.1</npmVersion>
            <installDirectory>${basedir}</installDirectory>
            <serverId>central</serverId>
            <npmDownloadRoot>${frontend.install.registry}/npm/-/</npmDownloadRoot>
            <nodeDownloadRoot>${frontend.install.dist}/</nodeDownloadRoot>
            <skip>${skipNpm}</skip>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.2.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>
        <plugin>
          <groupId>biz.aQute.bnd</groupId>
          <artifactId>bnd-maven-plugin</artifactId>
          <version>5.0.1</version>
          <executions>
            <execution>
              <id>bnd-process</id>
              <goals>
                <goal>bnd-process</goal>
              </goals>
              <configuration>
                <bnd>Bundle-Category: Ford

# export all versioned packages except for conditional ones (https://github.com/bndtools/bnd/issues/3721#issuecomment-579026778)
-exportcontents: ${removeall;${packages;VERSIONED};${packages;CONDITIONAL}}

# reproducible builds (https://github.com/bndtools/bnd/issues/3521)
-noextraheaders: true
-snapshot: SNAPSHOT

Bundle-DocURL:
-plugin org.apache.sling.caconfig.bndplugin.ConfigurationClassScannerPlugin
-plugin org.apache.sling.bnd.models.ModelsScannerPlugin

# Support parsing of Felix SCR annotations through the felix.scr.bnd plugin
-plugin.felixscr: org.apache.felix.scrplugin.bnd.SCRDescriptorBndPlugin;destdir=${.}/target/classes;log=error</bnd>
              </configuration>
            </execution>
          </executions>
          <dependencies>
            <dependency>
              <groupId>org.apache.sling</groupId>
              <artifactId>org.apache.sling.caconfig.bnd-plugin</artifactId>
              <version>1.0.2</version>
            </dependency>
            <dependency>
              <groupId>org.apache.sling</groupId>
              <artifactId>org.apache.sling.bnd.models</artifactId>
              <version>1.0.0</version>
            </dependency>
            <dependency>
              <groupId>org.apache.felix</groupId>
              <artifactId>org.apache.felix.scr.bnd</artifactId>
              <version>1.9.4</version>
            </dependency>
            <dependency>
              <groupId>org.apache.felix</groupId>
              <artifactId>org.apache.felix.scr.annotations</artifactId>
              <version>1.12.0</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>biz.aQute.bnd</groupId>
          <artifactId>bnd-baseline-maven-plugin</artifactId>
          <version>5.2.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.2.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>3.0.0-M5</version>
          <configuration>
            <useSystemClassLoader>false</useSystemClassLoader>
            <skipTests>${skipTests}</skipTests>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>2.22.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>3.0.0-M1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.sling</groupId>
          <artifactId>sling-maven-plugin</artifactId>
          <version>2.4.2</version>
          <configuration>
            <deploymentMethod>WebConsole</deploymentMethod>
            <user>${aem.user}</user>
            <password>${aem.password}</password>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.sling</groupId>
          <artifactId>htl-maven-plugin</artifactId>
          <version>1.1.6-1.4.0</version>
          <configuration>
            <failOnErrors>true</failOnErrors>
            <failOnWarnings>true</failOnWarnings>
            <generateJavaClasses>true</generateJavaClasses>
            <allowedExpressionOptions>
              <allowedExpressionOption>cssClassName</allowedExpressionOption>
              <allowedExpressionOption>decoration</allowedExpressionOption>
              <allowedExpressionOption>decorationTagName</allowedExpressionOption>
              <allowedExpressionOption>wcmmode</allowedExpressionOption>
            </allowedExpressionOptions>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.jackrabbit</groupId>
          <artifactId>filevault-package-maven-plugin</artifactId>
          <version>1.0.3</version>
          <configuration>
            <skipValidation>true</skipValidation>
            <group>${project.groupId}</group>
            <name>${project.artifactId}</name>
            <filterSource>src/main/content/META-INF/vault/filter.xml</filterSource>
            <jcrRootSourceDirectory>src/main/content/jcr_root</jcrRootSourceDirectory>
          </configuration>
        </plugin>
        <plugin>
          <groupId>com.day.jcr.vault</groupId>
          <artifactId>content-package-maven-plugin</artifactId>
          <version>1.0.2</version>
          <configuration>
            <useProxy>false</useProxy>
            <targetURL>http://${aem.host}:${aem.port}/crx/packmgr/service.jsp</targetURL>
            <failOnError>true</failOnError>
            <userId>${aem.user}</userId>
            <password>${aem.password}</password>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>1.4.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <versionRange>[1.0.0,)</versionRange>
                    <goals>
                      <goal>enforce</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <versionRange>[2.2,)</versionRange>
                    <goals>
                      <goal>copy-dependencies</goal>
                      <goal>unpack</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <versionRange>[1.5,)</versionRange>
                    <goals>
                      <goal>reserve-network-port</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>flatten-maven-plugin</artifactId>
                    <versionRange>[1.1.0,)</versionRange>
                    <goals>
                      <goal>flatten</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.sonarsource.scanner.maven</groupId>
          <artifactId>sonar-maven-plugin</artifactId>
          <version>3.7.0.1746</version>
        </plugin>
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>0.8.6</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>flatten-maven-plugin</artifactId>
          <version>1.2.6-1564378</version>
          <executions>
            <execution>
              <id>flatten</id>
              <phase>process-resources</phase>
              <goals>
                <goal>flatten</goal>
              </goals>
            </execution>
            <execution>
              <id>flatten-on-clean</id>
              <phase>clean</phase>
              <goals>
                <goal>clean</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <updatePomFile>true</updatePomFile>
            <flattenMode>resolveCiFriendliesOnly</flattenMode>
            <pomElements>
              <profiles>keep</profiles>
            </pomElements>
          </configuration>
        </plugin>
        <plugin>
          <groupId>io.fabric8</groupId>
          <artifactId>docker-maven-plugin</artifactId>
          <version>0.34.1</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>exec-maven-plugin</artifactId>
          <version>3.0.1-5a25fa1</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>properties-maven-plugin</artifactId>
          <version>1.0.0</version>
        </plugin>
        <plugin>
          <groupId>net.masterthought</groupId>
          <artifactId>maven-cucumber-reporting</artifactId>
          <version>3.13.0</version>
        </plugin>
        <plugin>
          <groupId>com.cognifide.aet</groupId>
          <artifactId>aet-maven-plugin</artifactId>
          <version>2.1.4</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>xml-maven-plugin</artifactId>
          <version>1.0.2</version>
        </plugin>
        <plugin>
          <groupId>io.qameta.allure</groupId>
          <artifactId>allure-maven</artifactId>
          <version>2.10.0</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.gmaven</groupId>
          <artifactId>groovy-maven-plugin</artifactId>
          <version>2.1.1</version>
        </plugin>
        <plugin>
          <groupId>pl.project13.maven</groupId>
          <artifactId>git-commit-id-plugin</artifactId>
          <version>4.0.0</version>
        </plugin>
        <plugin>
          <groupId>com.github.temyers</groupId>
          <artifactId>cucumber-jvm-parallel-plugin</artifactId>
          <version>4.2.0</version>
          <executions>
            <execution>
              <id>generateRunners</id>
              <phase>generate-test-sources</phase>
              <goals>
                <goal>generateRunners</goal>
              </goals>
              <configuration>
                <glue>
                  <package>${bobcat.cucumber.glue}</package>
                </glue>
                <outputDirectory>${project.build.directory}/generated-test-sources</outputDirectory>
                <featuresDirectory>src/main/features</featuresDirectory>
                <cucumberOutputDir>${bobcat.cucumber.reportPath}</cucumberOutputDir>
                <plugins>
                  <plugin>
                    <name>json</name>
                  </plugin>
                  <plugin>
                    <name>junit</name>
                  </plugin>
                </plugins>
                <strict>true</strict>
                <monochrome>true</monochrome>
                <tags>
                  <tag>${bobcat.cucumber.tag}</tag>
                  <tag>~@disabled</tag>
                </tags>
                <useTestNG>false</useTestNG>
                <namingScheme>pattern</namingScheme>
                <namingPattern>Parallel{c}Test</namingPattern>
                <parallelScheme>FEATURE</parallelScheme>
                <customVmTemplate>src/test/resources/bobcat-junit-template.java.vm</customVmTemplate>
                <packageName>${bobcat.cucumber.package}</packageName>
              </configuration>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <artifactId>maven-release-plugin</artifactId>
        <version>2.5.3</version>
        <configuration>
          <tagNameFormat>v@{project.version}</tagNameFormat>
          <preparationGoals>clean install</preparationGoals>
          <goals>deploy</goals>
          <releaseProfiles>release</releaseProfiles>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-source-plugin</artifactId>
        <version>3.2.1</version>
        <inherited>true</inherited>
      </plugin>
      <plugin>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <id>default-enforce</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <fail>true</fail>
              <rules>
                <requireMavenVersion>
                  <version>[3.5.2,)</version>
                </requireMavenVersion>
                <requireJavaVersion>
                  <message>Project must be compiled with Java 8 or higher.</message>
                  <version>1.8.0</version>
                </requireJavaVersion>
                <requireReleaseDeps>
                  <message>Only released dependencies are allowed for release builds.</message>
                  <onlyWhenRelease>true</onlyWhenRelease>
                </requireReleaseDeps>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>net.revelc.code.formatter</groupId>
        <artifactId>formatter-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>validate-files</id>
            <phase>${formatter.phase}</phase>
            <goals>
              <goal>validate</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>flatten-maven-plugin</artifactId>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>autoInstallBundle</id>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.apache.sling</groupId>
              <artifactId>sling-maven-plugin</artifactId>
              <executions>
                <execution>
                  <id>install-bundle-author</id>
                  <goals>
                    <goal>install</goal>
                  </goals>
                  <configuration>
                    <slingUrl>http://${aem.host}:${aem.port}/system/console</slingUrl>
                  </configuration>
                </execution>
              </executions>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
    <profile>
      <id>autoInstallBundlePublish</id>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.apache.sling</groupId>
              <artifactId>sling-maven-plugin</artifactId>
              <executions>
                <execution>
                  <id>install-bundle-publish</id>
                  <goals>
                    <goal>install</goal>
                  </goals>
                  <configuration>
                    <slingUrl>http://${aem.publish.host}:${aem.publish.port}/system/console</slingUrl>
                  </configuration>
                </execution>
              </executions>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
    <profile>
      <id>autoInstallPackage</id>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>com.ford.devops</groupId>
              <artifactId>devops-maven-plugin</artifactId>
              <executions>
                <execution>
                  <id>wait-for-author-to-accept-deployments</id>
                  <phase>install</phase>
                  <goals>
                    <goal>tail</goal>
                  </goals>
                  <configuration>
                    <idleTime>1</idleTime>
                    <retries>30</retries>
                    <hosts>http://${aem.host}:${aem.port}</hosts>
                    <username>${aem.user}</username>
                    <password>${aem.password}</password>
                  </configuration>
                </execution>
              </executions>
            </plugin>
            <plugin>
              <groupId>com.day.jcr.vault</groupId>
              <artifactId>content-package-maven-plugin</artifactId>
              <executions>
                <execution>
                  <id>install-package-author</id>
                  <goals>
                    <goal>install</goal>
                  </goals>
                  <configuration>
                    <targetURL>http://${aem.host}:${aem.port}/crx/packmgr/service.jsp</targetURL>
                  </configuration>
                </execution>
              </executions>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
    <profile>
      <id>autoInstallPackagePublish</id>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>com.ford.devops</groupId>
              <artifactId>devops-maven-plugin</artifactId>
              <executions>
                <execution>
                  <id>wait-for-publish-to-accept-deployments</id>
                  <phase>install</phase>
                  <goals>
                    <goal>tail</goal>
                  </goals>
                  <configuration>
                    <idleTime>1</idleTime>
                    <retries>30</retries>
                    <hosts>http://${aem.publish.host}:${aem.publish.port}</hosts>
                    <username>${aem.user}</username>
                    <password>${aem.password}</password>
                  </configuration>
                </execution>
              </executions>
            </plugin>
            <plugin>
              <groupId>com.day.jcr.vault</groupId>
              <artifactId>content-package-maven-plugin</artifactId>
              <executions>
                <execution>
                  <id>install-package-publish</id>
                  <goals>
                    <goal>install</goal>
                  </goals>
                  <configuration>
                    <targetURL>http://${aem.publish.host}:${aem.publish.port}/crx/packmgr/service.jsp</targetURL>
                  </configuration>
                </execution>
              </executions>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
    <profile>
      <id>bundle-build</id>
      <activation>
        <file>
          <exists>bnd.bnd</exists>
        </file>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>biz.aQute.bnd</groupId>
            <artifactId>bnd-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>bnd-process</id>
                <goals>
                  <goal>bnd-process</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-jar-plugin</artifactId>
            <configuration>
              <archive>
                <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
              </archive>
            </configuration>
          </plugin>
          <plugin>
            <groupId>biz.aQute.bnd</groupId>
            <artifactId>bnd-baseline-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>baseline</id>
                <goals>
                  <goal>baseline</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <failOnMissing>false</failOnMissing>
              <skip>${skipBndBaseline}</skip>
              <releaseversions>${bndReleaseVersions}</releaseversions>
              <diffignores>
                <diffignore>Bundle-Version</diffignore>
              </diffignores>
            </configuration>
          </plugin>
          <plugin>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <forkCount>${surefire.java.fork.count}</forkCount>
              <reuseForks>${surefire.java.fork.reuse}</reuseForks>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.sling</groupId>
            <artifactId>sling-maven-plugin</artifactId>
          </plugin>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
      <dependencies>
        <dependency>
          <groupId>biz.aQute.bnd</groupId>
          <artifactId>biz.aQute.bndlib</artifactId>
        </dependency>
        <dependency>
          <groupId>org.osgi</groupId>
          <artifactId>org.osgi.annotation.versioning</artifactId>
        </dependency>
        <dependency>
          <groupId>org.osgi</groupId>
          <artifactId>org.osgi.annotation.bundle</artifactId>
        </dependency>
        <dependency>
          <groupId>org.osgi</groupId>
          <artifactId>org.osgi.service.metatype.annotations</artifactId>
        </dependency>
        <dependency>
          <groupId>org.osgi</groupId>
          <artifactId>org.osgi.service.component.annotations</artifactId>
        </dependency>
        <dependency>
          <groupId>org.apache.sling</groupId>
          <artifactId>org.apache.sling.servlets.annotations</artifactId>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>package-build</id>
      <activation>
        <file>
          <exists>src/main/content/jcr_root</exists>
        </file>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.jackrabbit</groupId>
            <artifactId>filevault-package-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>format-vlt-files</id>
                <phase>${formatter.phase}</phase>
                <goals>
                  <goal>format-xml</goal>
                </goals>
                <configuration>
                  <validateOnly>${formatter.validate.only}</validateOnly>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>com.ford.devops</groupId>
            <artifactId>devops-maven-plugin</artifactId>
          </plugin>
          <plugin>
            <groupId>com.day.jcr.vault</groupId>
            <artifactId>content-package-maven-plugin</artifactId>
            <extensions>true</extensions>
          </plugin>
          <plugin>
            <groupId>org.apache.sling</groupId>
            <artifactId>htl-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>validate-htl-scripts</id>
                <phase>generate-sources</phase>
                <goals>
                  <goal>validate</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <sourceDirectory>src/main/content/jcr_root</sourceDirectory>
            </configuration>
          </plugin>
        </plugins>
      </build>
      <dependencies>
        <dependency>
          <groupId>org.apache.sling</groupId>
          <artifactId>org.apache.sling.scripting.sightly.compiler</artifactId>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>org.apache.sling</groupId>
          <artifactId>org.apache.sling.scripting.sightly.compiler.java</artifactId>
          <scope>provided</scope>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>package-build-with-frontend</id>
      <activation>
        <file>
          <exists>src/main/frontend</exists>
        </file>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>com.github.eirslett</groupId>
            <artifactId>frontend-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>npm-run-build</id>
                <goals>
                  <goal>npm</goal>
                </goals>
                <configuration>
                  <arguments>run ${frontend.build.script}</arguments>
                </configuration>
              </execution>
            </executions>
            <configuration>
              <workingDirectory>src/main/frontend</workingDirectory>
            </configuration>
          </plugin>
        </plugins>
      </build>
      <properties>
        <sonar.sources>src/main/content/jcr_root,src/main/frontend</sonar.sources>
      </properties>
    </profile>
    <profile>
      <id>uitests-with-protractor</id>
      <activation>
        <file>
          <exists>protractor.conf.js</exists>
        </file>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>com.github.eirslett</groupId>
            <artifactId>frontend-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>npm-test</id>
                <phase>test</phase>
                <goals>
                  <goal>npm</goal>
                </goals>
                <configuration>
                  <arguments>run ${frontend.test.script}</arguments>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>uitests-with-bobcat1-cucumber</id>
      <activation>
        <file>
          <exists>src/main/features</exists>
        </file>
      </activation>
      <build>
        <resources>
          <resource>
            <targetPath>${project.build.outputDirectory}</targetPath>
            <filtering>true</filtering>
            <directory>src/main/resources</directory>
          </resource>
          <resource>
            <targetPath>${bobcat.configuration.paths}</targetPath>
            <filtering>true</filtering>
            <directory>src/main/config/common</directory>
          </resource>
        </resources>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>properties-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>read-environment-properties</id>
                <phase>initialize</phase>
                <goals>
                  <goal>read-project-properties</goal>
                </goals>
                <configuration>
                  <files>
                    <file>${bobcat.properties.file}</file>
                  </files>
                </configuration>
              </execution>
              <execution>
                <id>write-environment-properties</id>
                <phase>generate-resources</phase>
                <goals>
                  <goal>write-project-properties</goal>
                </goals>
                <configuration>
                  <outputFile>${bobcat.configuration.paths}/environment.properties</outputFile>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <forkCount>${bobcat.fork.count}</forkCount>
              <reuseForks>true</reuseForks>
              <useSystemClassLoader>false</useSystemClassLoader>
              <systemPropertyVariables>
                <webdriver.type>remote</webdriver.type>
                <configuration.paths>${bobcat.configuration.paths}</configuration.paths>
                <bobcat.report.statistics.retryPercentage>1.0</bobcat.report.statistics.retryPercentage>
              </systemPropertyVariables>
            </configuration>
          </plugin>
          <plugin>
            <groupId>net.masterthought</groupId>
            <artifactId>maven-cucumber-reporting</artifactId>
            <executions>
              <execution>
                <id>execution</id>
                <phase>test</phase>
                <goals>
                  <goal>generate</goal>
                </goals>
                <configuration>
                  <projectName>${project.name}</projectName>
                  <parallelTesting>true</parallelTesting>
                  <outputDirectory>${bobcat.cucumber.reportPath}</outputDirectory>
                  <cucumberOutput>${bobcat.cucumber.reportPath}</cucumberOutput>
                  <checkBuildResult>false</checkBuildResult>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
      <properties>
        <bobcat.version>1.4.0</bobcat.version>
        <webdriver.url>${bobcat.webdriver.url}</webdriver.url>
      </properties>
      <dependencies>
        <dependency>
          <groupId>javax.annotation</groupId>
          <artifactId>javax.annotation-api</artifactId>
        </dependency>
        <dependency>
          <groupId>com.google.guava</groupId>
          <artifactId>guava</artifactId>
          <version>23.0</version>
        </dependency>
        <dependency>
          <groupId>com.cognifide.qa.bb</groupId>
          <artifactId>bb-core</artifactId>
          <version>${bobcat.version}</version>
          <exclusions>
            <exclusion>
              <artifactId>tools</artifactId>
              <groupId>com.sun</groupId>
            </exclusion>
          </exclusions>
        </dependency>
        <dependency>
          <groupId>com.cognifide.qa.bb</groupId>
          <artifactId>bb-cumber</artifactId>
          <version>${bobcat.version}</version>
        </dependency>
        <dependency>
          <groupId>com.cognifide.qa.bb</groupId>
          <artifactId>bb-traffic</artifactId>
          <version>${bobcat.version}</version>
        </dependency>
        <dependency>
          <groupId>com.cognifide.qa.bb</groupId>
          <artifactId>bb-aem-common</artifactId>
          <version>${bobcat.version}</version>
        </dependency>
        <dependency>
          <groupId>com.cognifide.qa.bb</groupId>
          <artifactId>bb-aem-classic</artifactId>
          <version>${bobcat.version}</version>
        </dependency>
        <dependency>
          <groupId>com.cognifide.qa.bb</groupId>
          <artifactId>bb-reports</artifactId>
          <version>${bobcat.version}</version>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>uitests-with-bobcat2</id>
      <activation>
        <file>
          <exists>src/main/bobcat2</exists>
        </file>
      </activation>
      <build>
        <resources>
          <resource>
            <targetPath>${project.build.outputDirectory}</targetPath>
            <directory>src/main/resources</directory>
          </resource>
          <resource>
            <targetPath>${project.build.outputDirectory}</targetPath>
            <filtering>true</filtering>
            <directory>src/main/bobcat2</directory>
          </resource>
        </resources>
        <plugins>
          <plugin>
            <artifactId>maven-surefire-plugin</artifactId>
            <dependencies>
              <dependency>
                <groupId>org.aspectj</groupId>
                <artifactId>aspectjweaver</artifactId>
                <version>${aspectj.version}</version>
              </dependency>
            </dependencies>
            <configuration>
              <testFailureIgnore>true</testFailureIgnore>
              <forkCount>${bobcat.fork.count}</forkCount>
              <reuseForks>true</reuseForks>
              <argLine>-javaagent:"${settings.localRepository}/org/aspectj/aspectjweaver/${aspectj.version}/aspectjweaver-${aspectj.version}.jar"</argLine>
              <systemProperties>
                <property>
                  <name>junit.jupiter.extensions.autodetection.enabled</name>
                  <value>true</value>
                </property>
                <property>
                  <name>allure.results.directory</name>
                  <value>${project.build.directory}/allure-results</value>
                </property>
              </systemProperties>
              <groups>${bobcat2.tags.include}</groups>
              <excludedGroups>${bobcat2.tags.exclude}</excludedGroups>
            </configuration>
          </plugin>
          <plugin>
            <groupId>io.qameta.allure</groupId>
            <artifactId>allure-maven</artifactId>
            <configuration>
              <allureDownloadUrl>https://www.nexus.ford.com/repository/ford_aem_all/io/qameta/allure/allure-commandline/%s/allure-commandline-%s.zip</allureDownloadUrl>
              <reportVersion>2.10.0</reportVersion>
              <reportDirectory>${project.build.directory}/allure-report</reportDirectory>
            </configuration>
          </plugin>
        </plugins>
      </build>
      <properties>
        <bobcat.version>2.0.3</bobcat.version>
        <bobcat2.tags.exclude>ignore</bobcat2.tags.exclude>
        <aspectj.version>1.8.10</aspectj.version>
        <publish.url>${bobcat.domain}</publish.url>
        <bobcat2.tags.include>smoke</bobcat2.tags.include>
      </properties>
      <dependencies>
        <dependency>
          <groupId>javax.annotation</groupId>
          <artifactId>javax.annotation-api</artifactId>
        </dependency>
        <dependency>
          <groupId>com.cognifide.qa.bb</groupId>
          <artifactId>bb-core</artifactId>
          <version>${bobcat.version}</version>
          <exclusions>
            <exclusion>
              <artifactId>tools</artifactId>
              <groupId>com.sun</groupId>
            </exclusion>
          </exclusions>
        </dependency>
        <dependency>
          <groupId>com.cognifide.qa.bb</groupId>
          <artifactId>bb-traffic</artifactId>
          <version>${bobcat.version}</version>
        </dependency>
        <dependency>
          <groupId>com.cognifide.qa.bb</groupId>
          <artifactId>bb-junit5</artifactId>
          <version>${bobcat.version}</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.junit.jupiter</groupId>
          <artifactId>junit-jupiter-params</artifactId>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.junit.jupiter</groupId>
          <artifactId>junit-jupiter-engine</artifactId>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>io.qameta.allure</groupId>
          <artifactId>allure-junit5</artifactId>
          <version>2.12.1</version>
        </dependency>
        <dependency>
          <groupId>io.qameta.allure</groupId>
          <artifactId>allure-java-commons</artifactId>
          <version>2.12.1</version>
        </dependency>
        <dependency>
          <groupId>com.fasterxml.jackson.core</groupId>
          <artifactId>jackson-annotations</artifactId>
          <version>2.9.8</version>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>uitests-with-aet</id>
      <activation>
        <file>
          <exists>src/test/aet</exists>
        </file>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-resources-plugin</artifactId>
            <version>3.2.0</version>
            <executions>
              <execution>
                <id>copy-resources</id>
                <phase>generate-test-resources</phase>
                <goals>
                  <goal>copy-resources</goal>
                </goals>
                <configuration>
                  <outputDirectory>${project.build.directory}/aet-resources</outputDirectory>
                  <resources>
                    <resource>
                      <directory>src/test/aet</directory>
                      <filtering>true</filtering>
                    </resource>
                  </resources>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.gmaven</groupId>
            <artifactId>groovy-maven-plugin</artifactId>
            <executions>
              <execution>
                <phase>process-test-resources</phase>
                <goals>
                  <goal>execute</goal>
                </goals>
                <configuration>
                  <source>// script to merge test suites from file list ${aet.suitcase.files} to target/test-suite.xml AET runner
                                        import groovy.xml.XmlUtil
                                        import org.apache.maven.model.Profile

                                        def excludeProfileIds = ['with-integration-tests', 'ford']

                                        def artifactId = "$project.artifactId".toLowerCase()
                                        artifactId = artifactId.replaceAll(/\.(.*)/, "")

                                        def fileList = "${aet.suitcase.files}".split(',')

                                        def suiteNameParts = []

                                        for (Profile profile : project.activeProfiles) {
                                            if (!excludeProfileIds.contains(profile.id)) {
                                                suiteNameParts.add(profile.id)
                                            }
                                        }

                                        if (suiteNameParts.isEmpty()) {
                                            def sortedNames = fileList.sort(false)
                                            for (String fileName : sortedNames) {
                                                suiteNameParts.add(fileName.minus('.xml').replaceAll(/\//, "-"))
                                            }
                                        }

                                        suiteNameParts.add("${aet.suitcase.name}")
                                        def suiteName = suiteNameParts.join('_')

                                        def templateText = """
                                                &lt;suite name="$suiteName" company="ford" project="$artifactId" domain="http://host.docker.internal:4503">
                                    &lt;/suite>
                                        """

                                        def testSuiteTemplate = new XmlParser().parseText(templateText)

                                        for (String fileName : fileList) {
                                            String filePath = project.build.directory + "/aet-resources/$fileName"
                                            File inputXml = new File(filePath)
                                            if (!inputXml.exists()) {
                                                continue
                                            }

                                            println "Add file $fileName to test suite"

                                            def tests = new XmlParser(false, true, true).parse(inputXml)
                                            def testList = tests.'*'
                                            for (Node test : testList) {
                                                testSuiteTemplate.append(test)
                                            }
                                        }

                                        String outXmlText = XmlUtil.serialize(testSuiteTemplate)


                                        File targetDir = new File("$project.build.directory");
                                        if (!targetDir.exists()) {
                                            targetDir.mkdir()
                                        }

                                        def suiteFilePath = "$project.build.directory/test-suite.xml"
                                        File suiteFile = new File(suiteFilePath);
                                        if (!suiteFile.exists()) {
                                            suiteFile.createNewFile()
                                        }
                                        println "Combined test suite is created at $suiteFilePath"
                                        suiteFile.write outXmlText</source>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>com.cognifide.aet</groupId>
            <artifactId>aet-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>default-cli</id>
                <phase>test</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <testSuite>${project.build.directory}/test-suite.xml</testSuite>
                  <endpointDomain>${aet.endpointDomain}</endpointDomain>
                  <timeout>${aet.timeout}</timeout>
                  <domain>${aet.domain}</domain>
                  <xUnit>${aet.xUnit}</xUnit>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>with-formatter</id>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>net.revelc.code.formatter</groupId>
              <artifactId>formatter-maven-plugin</artifactId>
              <executions>
                <execution>
                  <id>format-files</id>
                  <goals>
                    <goal>format</goal>
                  </goals>
                </execution>
              </executions>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
      <properties>
        <formatter.validate.only>false</formatter.validate.only>
        <formatter.phase>process-sources</formatter.phase>
      </properties>
    </profile>
  </profiles>
</project>
